getKey->W
4->V
0->A
1->L
ClrHome
Output(3,7,"SNAKE")
Output(4,2,"EASY"
Output(5,2,"MEDIUM"
Output(6,2,"HARD"
Output(7,2,"HIGHSCORES"
While W!=105
	getKey->W
	Output(V,1,".")
	If W=25 and V>4:Then
		Output(V,1," ")
		V-1->V
	End
	If W=34 and V<7:Then
		Output(V,1," ")
		V+1->V
	End
End
V-3->V
If V<4:Then
	1->D
	4->Y
	8->X
	If V=3:Then
		2->L
	End
	randInt(1,16)->G
	randInt(1,8)->H
	2->N
	1->F
	ClrHome
	N->dim(|LBY)
	N->dim(|LBX)
	
	seq(X,X,2,1,~1)->|LBY
	Fill(8,|LBX)
	While 1
		getKey->K
		If K=25 and (D=2 or D=4):Then
			1->D
		End
		If K=26 and (D=1 or D=3):Then
			2->D
		End
		If K=34 and (D=2 or D=4):Then
			3->D
		End
		If K=24 and (D=1 or D=3):Then
			4->D
		End
		If D=1:Then
			Y-1->Y
		End
		If D=2:Then
			X+1->X
		End
		If D=3:Then
			Y+1->Y
		End
		If D=4:Then
			X-1->X
		End
		If X>16 and V=1:Then
			1->X
		End
		If X<1 and V=1:Then
			16->X
		End
		If Y>8 and V=1:Then
			1->Y
		End
		If Y<1 and V=1:Then
			8->Y
		End
		If (X>16 or X<1 or Y>8 or Y<1) and V!=1:Then
			5->A
			|LBY(2)->Y
			|LBX(2)->X
		End
		Output(Y,X,"O")
		augment({X},|LBX)->|LBX
		dim(|LBX)-1->dim(|LBX)
		augment({Y},|LBY)->|LBY
		dim(|LBY)-1->dim(|LBY)
		Output(|LBY(dim(|LBY)),|LBX(dim(|LBX))," ")
		
		If F=0:Then
			Lbl B
			Output(H,G,"O")
			randInt(1,16)->G
			randInt(1,8)->H
			Output(H,G,".")
			If max(G+H[i]=|LBX+|LBY*[i]):Then
				Goto B
			End
			1->F
		End
		If X=G and Y=H:Then
			0->F
			If V=3:Then
				dim(|LBX)+2->dim(|LBX)
				dim(|LBY)+2->dim(|LBY)
				|LBX(dim(|LBX)-2)->|LBX(dim(|LBX)-1)
				|LBY(dim(|LBY)-2)->|LBY(dim(|LBY)-1)
			Else
				dim(|LBX)+1->dim(|LBX)
				dim(|LBY)+1->dim(|LBY)
			End
			N+1->N
			
		Else
			Output(H,G,".")
		End
		If (sum(X+Y[i]=|LBX+|LBY*[i])>1) or A=5
		Then
			ClrHome
			If V=1:Then
				|LHS->|LA
			End
			If V=2:Then
				|LHS1->|LA
			End
			If V=3:Then
				|LHS2->|LA
			End
			Disp "GAME OVER"
			Disp "SCORE:"
			Disp (N-2)
			If (N-2)>|LA(8):Then
				augment({N-2},|LA)->|LA
				SortD(|LA)
				dim(|LA)-1->dim(|LA)
				0->R
				8->M
				Disp "NAME(3CHARS)"
				Asm(prgmZLOCK)
				Input Str7
				sub(Str7,1,3)->Str7
				While R!=1
					If (N-2)=|LA(M):Then
						1->R
					Else
						M-1->M
						
					End
				End
				If V=1:Then
					If M=1:Then
						4->B
						1->C
						5->E
						20->F
						Str7+sub(Str6,B,C)+sub(Str6,E,F)->Str6
					End
					If M>1 and M<8
					Then
						1->B
						(M-1)3->C
						4+(M-1)3->E
						21-((M-1)3)->F
						sub(Str6,B,C)+Str7+sub(Str6,E,F)->Str6
					End
					If M=8:Then
						1->B
						1->F
						20->C
						20->E
						sub(Str6,B,C)+sub(Str6,E,F)+Str7->Str6
					End
				End
				
				If V=2:Then
					If M=1:Then
						4->B
						1->C
						5->E
						20->F
						Str7+sub(Str8,B,C)+sub(Str8,E,F)->Str8
					End
					If M>1 and M<8
					Then
						1->B
						(M-1)3->C
						4+(M-1)3->E
						21-((M-1)3)->F
						sub(Str8,B,C)+Str7+sub(Str8,E,F)->Str8
					End
					If M=8:Then
						1->B
						1->F
						20->C
						20->E
						sub(Str8,B,C)+sub(Str8,E,F)+Str7->Str8
					End
				End
				
				If V=3:Then
					If M=1:Then
						4->B
						1->C
						5->E
						20->F
						Str7+sub(Str9,B,C)+sub(Str9,E,F)->Str9
					End
					If M>1 and M<8
					Then
						1->B
						(M-1)3->C
						4+(M-1)3->E
						21-((M-13)->F
						sub(Str9,B,C)+Str7+sub(Str9,E,F)->Str9
					End
					If M=8:Then
						1->B
						1->F
						20->C
						20->E
						sub(Str9,B,C)+sub(Str9,E,F)+Str7->Str9
					End
				End
			If V=1:Then:|LA->|LHS:End
			If V=2:Then:|LA->|LHS1:End
			If V=3:Then:|LA->|LHS2:End
				DelVar |LA
			End
			Stop
		End
	End
End
If V=4:Then
	1->U
	getKey->W
	ClrHome
	While W!=105
		getKey->W
		If W=24 and U>1:Then
			U-1->U
			ClrHome
		End
		If W=26 and U<3:Then
			U+1->U
			ClrHome
		End
		If U=1:Then
			Output(4,10," EASY ")
			For(H,1,8)
				Output(H,1,H)
				Output(H,2,":")
				Output(H,3,|LHS(H)
				Output(H,6,sub(Str6,3H-2,3))
			End
		End
		If U=2:Then
			Output(4,10,"MEDIUM")
			For(H,1,8)
				Output(H,1,H)
				Output(H,2,":")
				Output(H,3,|LHS1(H)
				Output(H,6,sub(Str8,3H-2,3)
			End
		End
		If U=3:Then
			Output(4,10," HARD ")
			For(H,1,8)
				Output(H,1,H)
				Output(H,2,":")
				Output(H,3,|LHS2(H)
				Output(H,6,sub(Str9,3H-2,3)
			End
		End
	End
End
prgmSNAKE